// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`withBadge HOC just value should render when given a function as value 1`] = `
<Component
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    badgeStyle={
      Object {
        "borderRadius": 9,
        "height": 18,
        "minWidth": 0,
        "width": 18,
      }
    }
    containerStyle={
      Object {
        "bottom": 0,
        "left": -7,
        "position": "absolute",
        "right": 0,
        "top": -2,
      }
    }
    status="error"
    textStyle={
      Object {
        "fontSize": 10,
        "paddingHorizontal": 0,
      }
    }
    value={1}
  />
</Component>
`;

exports[`withBadge HOC just value should render with just a value 1`] = `
<Component
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    badgeStyle={
      Object {
        "borderRadius": 9,
        "height": 18,
        "minWidth": 0,
        "width": 18,
      }
    }
    containerStyle={
      Object {
        "bottom": 0,
        "left": -7,
        "position": "absolute",
        "right": 0,
        "top": -2,
      }
    }
    status="error"
    textStyle={
      Object {
        "fontSize": 10,
        "paddingHorizontal": 0,
      }
    }
    value={1}
  />
</Component>
`;

exports[`withBadge HOC with options should not render when hidden is true 1`] = `
<Component
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
</Component>
`;

exports[`withBadge HOC with options should render without issue even with BadgeProps 1`] = `
<Component
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
      "position": "relative",
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  />
  <Themed.Badge
    badgeStyle={
      Object {
        "borderRadius": 9,
        "height": 18,
        "minWidth": 0,
        "width": 18,
      }
    }
    containerStyle={
      Object {
        "bottom": 5,
        "left": -7,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    status="success"
    textStyle={
      Object {
        "fontSize": 10,
        "paddingHorizontal": 0,
      }
    }
    value={1}
  />
</Component>
`;
